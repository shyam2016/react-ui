{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.components.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAAe,I,wBCEFA,EAAO,SAAAC,GAAK,OACzB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eAC1B,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQG,YCHNC,EAAW,SAAAR,GAAK,OACxB,qBAAKC,UAAU,YAAf,SAEID,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC3B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJdM,G,MAAY,SAACC,EAAaC,GAAd,OACrB,uBAAOZ,UAAU,SACjBa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC4CCG,E,kDA7Cb,aAAc,IAAD,8BACX,gBAeJH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAdpC,EAAKC,MAAM,CACTb,SAAS,GACTU,YAAa,IALJ,E,qDAWb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,oBAM1C,WAAS,IAAD,OACN,EAAkCC,KAAKN,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZU,EAAkBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC7CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAK9B,UAAU,MAAf,UACE,kDACA,uBAAOa,KAAK,SAASF,YAAY,iBACnCG,SAAU,SAAAE,GAAC,OAAI,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,WAE1D,cAAC,EAAD,CAAWT,YAAY,iBACfC,aAAce,KAAKf,eAGnB,cAAC,EAAD,CAAUJ,SAAUoB,W,GApCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.47c38ecc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport './card.styles.css';\nexport const Card = props =>(\n<div className='card-container'>\n    <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2`}></img>\n<h1>{props.monster.name}</h1>\n<h2>{props.monster.email}</h2>\n</div>\n);","import React from 'react'\nimport './card-list.styles.css'\nimport {Card} from '../card/card.component'\nexport const CardList = props => (\n     <div className='card-list'> \n    {\n         props.monsters.map(monster => (\n        <Card key={monster.id} monster={monster}></Card>\n         ))\n    }\n    \n    </div>\n);","import React from 'react'\nimport './search-box.styles.css'\n\nexport const SearchBox = (placeholder, handleChange) => (\n    <input className='search' \n    type='search' \n    placeholder={placeholder}\n    onChange={handleChange}\n/>\n)","import logo from './logo.svg';\nimport './App.css';\nimport React, {Component} from 'react';\nimport {CardList} from './components/card-list/card-list.components';\nimport {SearchBox} from './components/search-box/search-box.component';\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state={\n      monsters:[],\n      searchField: ''\n    };\n\n    //this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}));\n  }\nhandleChange = e => {\n  this.setState({ searchField: e.target.value })\n}\n\n  render(){\n    const { monsters, searchField } = this.state;\n    const filteredMonster = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase()))\n//console.log(filteredMonster)\n    return (\n      <div className=\"App\">\n        <h1> Monster Rolodex</h1>\n        <input type='search' placeholder='Search Monster' \n      onChange={e => this.setState({searchField: e.target.value})}></input>\n\n<SearchBox placeholder='Search Monster'\n        handleChange={this.handleChange}\n        />\n\n        <CardList monsters={filteredMonster}> \n\n        </CardList>\n       \n      </div>\n    );\n  }\n}\n\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}